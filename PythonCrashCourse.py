# squares = [value**2 for value in range(1, 11)]
# print(squares)

# numbers = [num for num in range(1, 21)]
# print(numbers)

# numbers = [num for num in range(1, 1000001)]
# print(min(numbers))
# print(max(numbers))
# print(sum(numbers))

# numbers = [num for num in range(1, 21, 2)]
# print(numbers)

# multiples = [num for num in range(3, 31, 3)]
# print(multiples)

# cubes = [cube**3 for cube in range(1, 11)]
# print(cubes)

# numbers = [num for num in range(1, 10)]
# print(f'The first three items in the list are: {numbers[0:3]}')

# numbers = [num for num in range(1, 10)]
# print(f'The three items from the middle of the list are: {numbers[3:6]}')

# numbers = [num for num in range(1, 10)]
# print(f'The last three items from the list are: {numbers[6:9]}')

# pizzas = ['cheese', 'veggie', 'buffalo']
# copy_pizzas = pizzas[:]

# print(pizzas)
# print(copy_pizzas)

# pizzas.append('pepperoni')
# copy_pizzas.append('barbecue')

# print(pizzas)
# print(copy_pizzas)


# foods = ('burger', 'hot dog', 'nachos', 'steak', 'soup')
# new_foods = ('pie', 'hot dog', 'nachos', 'steak', 'pizza')

# for food in new_foods:
#     print(food,end=' ')

# dictionary = {'cheese' : 'pizza'}

# print(dictionary.get('cake', 'Does not exist'))

# items = {'jay' : 'smith',
#          'tony' : 'dungy',
#          'sam' : 'jones'}

# for k, v in items.items():
#     print(f'key: {k}\nvalue: {v}')

# favorite_languages = { 'jen': 'python',
#                         'sarah': 'c',
#                         'edward': 'ruby',
#                         'phil': 'python'}

# for name in sorted(favorite_languages.keys()):
#     print(f'{name.title()}, thank you for taking the poll')

# favorite_languages = { 'jen': 'python',
#                         'sarah': 'c',
#                         'edward': 'ruby',
#                         'phil': 'python'}

# for language in set(favorite_languages.values()):
#     print(language.title())

# aliens = []

# for alien_number in range(30):
#     new_alien = {'color' : 'green', 'points' : 5, 'speed' : 'slow'}
#     aliens.append(new_alien)

# for alien in aliens[:3]:
#     if alien['color'] == 'green':
#         alien['color'] = 'yellow'
#         alien['speed'] = 'medium'
#         alien['points'] = 10

# for alien in aliens[:5]:
#     print(alien)

# print(f'Total number of aliens: {len(aliens)}')

# favorite_languages = { 'jen': ['python', 'ruby'],
#                        'sarah': ['c'],
#                        'edward': ['ruby', 'go'],
#                        'phil': ['python', 'haskell'], }

# for name, languages in favorite_languages.items():
#     print(name)
#     for language in languages:
#         print(language)

# age = input('How old are you: ')
# age = int(age)

# print(age)

# unconfirmed_users = ['alice', 'brian', 'candace']
# confirmed_users = []

# while unconfirmed_users:
#     current_user = unconfirmed_users.pop()
#     print(current_user.title())
#     confirmed_users.append(current_user)
#     print(confirmed_users)

#     function_name(list_name[:]) sends a copy of the list to the function

# def make_pizza(*toppings):
#     print(toppings)
# make_pizza('pepperoni')
# make_pizza('mushrooms', 'green peppers', 'extra cheese')

# def build_profile(first, last, **user_info):
#     user_info['first_name'] = first
#     user_info['last_name'] = last
#     return user_info

# user_profile = build_profile('albert', 'einstein',
#                             location='princeton', field='physics')
# print(user_profile)

# With inheritance you use super to call attributes from parent class
# class ElectricCar(Car):
#     def __init__(self, make, model, year):
#         super().__init__(make, model, year)
#         self.battery_size = 75
# Using a battery instance as an attribute for the electric car class
#         self.battery = Battery()

#     def describe_battery(self):
#         print(self.battery_size)

# To override a parent class function you just create a function with the same name and give it a different behavior
#     def fill_gas_tank(self):
#         print('This car has no gas)

#     my_tesla = ElectricCar('tesla', 'model s', 2019)
#     print(my_tesla.get_descriptive_name())
#     my_tesla.battery.describe_battery()

# with open('text.txt') as file:
#     contents = file.read()
# print(contents)

# Removes new line from the bottom that is generated by the read function
# with open('text.txt') as file:
#     contents = file.read()
# print(contents.rstrip())

# with open('text.txt') as file:
#     for line in file:
#       print(line.rstrip())

# with open('text.txt') as file:
#     lines = file.readlines()

# for line in lines:
#     print(lines.rstrip())

# read mode ('r') write mode ('w') append mode ('a') read/write mode ('r+')
# with open(filename, 'w) as file:
#     file.write('I love programming')

# utf-8 is used when system's default encoding does not match the encoding of a file
# with open(filename, encoding='utf-8') as f:
#     contents = f.read()

# title = 'Alice in Wonderland'
# print(title.split())
